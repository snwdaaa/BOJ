# 10^6 => 1,000,000
# 0.15초 -> 1500만번

import sys
input = sys.stdin.readline

n = int(input())

# 메모이제이션
memo = [0] * 1000001 # 1 ~ 10^6

# 상향식 풀이
# 1부터 N까지 올라가면서 계산 결과를 저장, 그리고 나중에 더 큰 수 계산할 때 다시 사용
# 우선, 현재 단계가 이전 단계에서 1을 더해서 올라온 단계라고 생각하고 다음과 비교한 후, 그 중 작은 값을 사용(최소 연산 횟수)
# 이전 단계에서 2를 곱해서 올라온 경우의 연산 횟수
# 이전 단계에서 3을 곱해서 올라온 경우의 연산 횟수

for i in range(2, n+1): # 2 ~ n
    memo[i] = memo[i-1] + 1 # 1을 더해서 올라온 경우의 연산 횟수
    # 현재 값이 2를 곱해서 올라온 값인 경우
    if i % 2 == 0:
        # 2를 곱해서 올라온 경우와, 1을 더해서 올라온 경우 중 연산 횟수가 더 적은 것을 선택
        memo[i] = min(memo[i], memo[i // 2] + 1)
    # 현재 값이 3을 곱해서 올라온 값인 경우
    if i % 3 == 0:
        # 3을 곱해서 올라온 경우와, 1을 더해서 올라온 경우 중 연산 횟수가 더 적은 것을 선택
        memo[i] = min(memo[i], memo[i // 3] + 1)

print(memo[n])
